#Graham Scan
/*202035501 Kang Seung Min
* Campus Clean _Using Graham Scan Algorithm
*/

#include<stdio.h>
#include<math.h>

#define MAX 100
//Point
struct Point {
	int x;
	int y;
};
struct Point p[MAX];

//stack
int stack[MAX]; //stack has point as Convex hull
int top = -1;

void sort(int n) {
	int min_x=0 , min_y=0;
	int min_index=0;

	int temp_x, temp_y;
	//sort
	for (int i = 1; i < n; i++) { //first spot is temp(x,y) index.
		if (min_y > p[i].y || (p[i].y == min_y) && min_x > p[i].x) {
			min_x = p[i].x;
			min_y = p[i].y;
			min_index = i;
		}
	}
	//시작점은 p[0]
	temp_x = p[0].x;
	temp_y = p[0].y;
	p[0].x = min_x;
	p[0].y = min_y;
	p[min_index].x = temp_x;
	p[min_index].y = temp_y;

	for (int i = 1; i < n; i++) {
		for (int j = i+1; j < n; j++) {
			if (p[i].x < p[j].x || (p[i].x == p[j].x) && (p[i].y > p[j].y)) {
				temp_x = p[i].x;
				temp_y = p[i].y;

				p[i].x = p[j].x;
				p[i].y = p[j].y;
				p[j].x = temp_x;
				p[j].y = temp_y;
			}
		}
	}
	//Defensive code.
	for (int i = 0; i < n; i++) {
		printf("%d %d\n", p[i].x, p[i].y);
	}
}
int CCW(int a, int b, int c) {
	int result = (p[b].x - p[a].x) * (p[c].y - p[a].y) - (p[c].x - p[a].x) * (p[b].y - p[a].y);
	if (result > 0) {
		return 1;
	}
	else if (result == 0) {
		return 0;
	}
	else if (result < 0) {
		return -1;
	}
}
void pop() {
	stack[top--] = MAX;
}
void Convex(int n) {
	stack[++top] = 0; //index를 저장.
	stack[++top] = 1;
	int res;
	for (int i = 2; i < n; i++) {
		printf("%d개를 가진 top\n",top+1);
		while (1) { //convex hull이 만들어 질 때까지 시도.
			res = CCW(stack[top - 1], stack[top], i);
			printf("res : %d\n", res);
			if (res == 1) {//save convex hull. 
				stack[++top] = i;
				break;
			}
			else if (res == -1) {
				pop();
			}
			else if (res == 0) {
				break;
			}
		}
	}
}
float euclidean(int a, int b) {
	float dx, dy;
	if (a == 0 && b == 0) { //(0,0)과 초기값
		dx = p[stack[b]].x - 0;
		dy = p[stack[b]].y - 0;
	}
	else {
		dx = p[stack[a]].x - p[stack[b]].x;
		dy = p[stack[a]].y - p[stack[b]].y;
	}

	return sqrt(dx * dx + dy * dy);
}
float Area() { //길이는 구하는 것.
	float d = 0.0;
	for(int i=0; i<top; i++){
		d += euclidean(i,i+1);
	}

	float r = euclidean(0, 0);
	return (2 * r + d);
}

int main() {
	int N;
	printf("Enter the number of coordinates: ");
	scanf_s("%d", &N);

	for (int i = 0; i < N; i++) {
		printf("Enter the coordinates of point %d (x y): ", i + 1);
		scanf_s("%d %d", &p[i].x, &p[i].y);
		getchar();  // Consume the newline character
	}
	sort(N);
	Convex(N);
	float sum = Area();

	printf("Area is %0.2f\n", sum+2.0);
	return 0;
}
